server {
    listen 80;

    if ($host = fin.clovr.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/fin.clovr.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/fin.clovr.me/privkey.pem; # managed by Certbot

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 180m;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;

    server_name fin.clovr.me;
    root /var/www/snowball/public;
    index index.php index.html index.htm;
    charset utf-8;
    server_tokens off;
    client_max_body_size 8m;

    gzip on;
    gzip_comp_level 5;
    gzip_types text/plain text/css text/javascript application/javascript application/json;

    ## All static files will be served directly.
    location ~* ^.+\.(?:css|js|jpe?g|ico|webp|png|html|xml|ttf|eot|woff|woff2|svg)$ {
        access_log off;
        expires 365d;
        add_header Cache-Control public;

        tcp_nodelay off;

        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /robots.txt  { access_log off; log_not_found off; }
    error_log  /var/log/nginx/snowball-error.log error;
    access_log /var/log/nginx/snowball-access.log combined;

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}

